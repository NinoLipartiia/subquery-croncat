# Methods called by the owner
type UpdateSettings @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
  ownerId: String,
  slotGranularity: BigInt
  paused: Boolean
  agentFeeDenom: String
  agentFeeAmount: String
  gasPrice: BigInt
  proxyCallbackGas: BigInt
  minTasksPerAgent: BigInt
  agentsEjectThreshold: BigInt
}

type MoveBalances @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
  accountId: String!
  balances: String!
}

# Agent methods
type RegisterAgent @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String! # The address that tries to register as an agent
  payableAccountId: String
}

type UpdateAgent @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
  payableAccountId: String!
}

type UnregisterAgent @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
}

type WithdrawReward @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
}

type CheckInAgent @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
}

type ProxyCall @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String! # The address of the agent
}

# Methods for tasks
type CreateTask @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String!
  # TODO: more fields
  interval: String!
  boundary: String!
  stopOnFail: Boolean!
  actions: String!
  rules: String!
}

type RemoveTask @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String! # The address of the agent
  taskHash: String!
}

type RefillTaskBalance @entity {
  id: ID! # The block hash
  blockHeight: BigInt!
  sender: String! # The address of the agent
  taskHash: String!
}

